{"version":3,"sources":["components/UI/Card.js","pages/NewQuote.js"],"names":["Card","props","className","classes","card","children","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","useState","isEntering","setIsEntering","textInputRef","useRef","authorInputRef","when","message","location","console","log","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","author","text","onFocus","control","htmlFor","type","id","name","ref","placeholder","rows","action","onClick"],"mappings":"4LAKeA,EAHF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,gCCyF/BC,UAnFE,WACf,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAEfC,EAAUC,cAEhBC,qBAAU,WACO,cAAXH,GACFC,EAAQG,KAAK,aAEd,CAACJ,EAAQC,IAEZ,MAAoCI,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAeC,mBACfC,EAAiBD,mBA6BvB,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CACEE,KAAML,EACNM,QAAS,SAACC,GAER,OADAC,QAAQC,IAAIF,GACN,0DAGV,cAAC,EAAD,UACE,uBACErB,UAAWC,IAAQuB,KACnBC,SAlCsB,SAACC,GAC7BA,EAAMC,iBACNL,QAAQC,IAAIT,EAAY,oBACxB,IAAMc,EAAgBV,EAAeW,QAAQC,MACvCC,EAAcf,EAAaa,QAAQC,MAEzCR,QAAQC,IAAI,wBAAyB,CACnCS,OAAQJ,EACRK,KAAMF,IAGRxB,EAAY,CACVyB,OAAQJ,EACRK,KAAMF,KAsBFG,QAxCmB,WACzBZ,QAAQC,IAAI,QAAST,GACrBC,GAAc,IAmCV,UAOE,sBAAKf,UAAWC,IAAQkC,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBACEC,KAAK,OACLC,GAAG,SACHC,KAAK,SACLC,IAAKxB,EACLyB,YAAY,cAGhB,sBAAKzC,UAAWC,IAAQkC,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOI,KAAK,IAAIF,IAAKtB,OAEpC,qBAAKlB,UAAWC,IAAQ0C,OAAxB,SACE,wBAAQ3C,UAAU,MAAM4C,QApCC,WACjC7B,GAAc,IAmCN","file":"static/js/3.3b4e226b.chunk.js","sourcesContent":["import classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>;\r\n};\r\nexport default Card;","import { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Prompt } from \"react-router-dom\";\r\nimport Card from \"../components/UI/Card\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\n\r\nimport classes from \"./Quotes.module.css\";\r\n\r\nconst NewQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.push(\"/quotes\");\r\n    }\r\n  }, [status, history]);\r\n\r\n  const [isEntering, setIsEntering] = useState(false);\r\n  const textInputRef = useRef();\r\n  const authorInputRef = useRef();\r\n\r\n  const formOnFocusHandler = () => {\r\n    console.log(\"focus\", isEntering);\r\n    setIsEntering(true);\r\n  };\r\n\r\n  const submitNewQuoteHandler = (event) => {\r\n    event.preventDefault();\r\n    console.log(isEntering, \"Submit new quote\");\r\n    const enteredAuthor = authorInputRef.current.value;\r\n    const enteredText = textInputRef.current.value;\r\n\r\n    console.log(\"submitNewQuoteHandler\", {\r\n      author: enteredAuthor,\r\n      text: enteredText,\r\n    });\r\n    // props.addNewQuote({author:enteredAuthor, text:enteredText});\r\n    sendRequest({\r\n      author: enteredAuthor,\r\n      text: enteredText,\r\n    });\r\n    // history.push(\"/quotes\"); commented as this will be used with useEffect\r\n  };\r\n\r\n  const finishEnteringQuoteHandler = () => {\r\n    setIsEntering(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Prompt\r\n        when={isEntering}\r\n        message={(location) => {\r\n          console.log(location);\r\n          return `Are you sure to move away? You will lost your input!`;\r\n        }}\r\n      />\r\n      <Card>\r\n        <form\r\n          className={classes.form}\r\n          onSubmit={submitNewQuoteHandler}\r\n          onFocus={formOnFocusHandler}\r\n        >\r\n          {/* /* Add LoadingSpinner.module.css?  */}\r\n\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"author\">Author</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"author\"\r\n              name=\"author\"\r\n              ref={textInputRef}\r\n              placeholder=\"Author\"\r\n            />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"text\">Text</label>\r\n            <textarea id=\"text\" rows=\"5\" ref={authorInputRef}></textarea>\r\n          </div>\r\n          <div className={classes.action}>\r\n            <button className=\"btn\" onClick={finishEnteringQuoteHandler}>\r\n              New Quote\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default NewQuote;\r\n"],"sourceRoot":""}